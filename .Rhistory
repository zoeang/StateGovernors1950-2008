mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T),
)
dat2<-dat%>%
group_by(gov_name, term_in_office)%>%
summarise(year=top_n(-1, year),
unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
#gub_dem_vote_prop is repeeated by term year; omit summarise
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T)
)
glimpse(dat)
test<-as.numeric(dat$gub_dem_vote_prop)
class(test)
rbind(test, dat$gub_dem_vote_prop)
test2<-rbind(test, dat$gub_dem_vote_prop)
View(test2)
test2<-as.data.frame(rbind(test, dat$gub_dem_vote_prop))
View(test2)
glimpse(dat)
test<-apply(dat[,5:ncol(dat)], 2, as.numeric)
View(test)
dim(test)
glimpse(test)
test<-as.data.frame(apply(dat[,5:ncol(dat)], 2, as.numeric))
dim(test)
glimpse(test)
dat2<-test%>%
group_by(gov_name, term_in_office)%>%
summarise(year=top_n(-1, year),
unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
#gub_dem_vote_prop is repeeated by term year; omit summarise
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T)
)
test1<-as.data.frame(cbind(dat[,1:4], test))
View(test1)
dat2<-test1%>%
group_by(gov_name, term_in_office)%>%
summarise(year=top_n(-1, year),
unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
#gub_dem_vote_prop is repeeated by term year; omit summarise
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T)
)
dat2<-test1%>%
group_by(gov_name, term_in_office)%>%
summarise(unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
#gub_dem_vote_prop is repeeated by term year; omit summarise
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T)
)
View(dat2)
View(dat1)
dat3<-merge(dat1[,1:5], dat2, by=c('gov_name', 'term_in_office'))
View(dat3)
dat2<-test1%>%
group_by(gov_name, term_in_office)%>%
summarise(unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
#gub_dem_vote_prop is repeeated by term year; omit summarise
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T)
)
dat3<-merge(dat1[,1:5], dat2, by=c('gov_name', 'term_in_office'), all.y = T)
length(which(is.nan(dat3)))
which(is.nan(dat3))
is.nan(dat3[320, 'unemployment'])
dat4<-dat3
dat4[is.nan(dat4)]<-NA
names(dat3)
names(dat1)
dat4<-dat3[, c(3:5,1,2, 6:ncol(dat3))]
dat5<-merge(dat1[,1:12], dat4, by=c('gov_name', 'term_in_office') )
View(dat5)
dat5<-merge(dat1[,4:12], dat4, by=c('gov_name', 'term_in_office') )
names(dat4)
dat5<-merge(dat1[,1:12], dat4[,4:ncol(dat4)], by=c('gov_name', 'term_in_office') )
View(dat5)
dat5<-dat5%>%
group_by(gov_name, term_in_office)
View(dat5)
dat5<-dat5%>%
group_by(gov_name, term_in_office, year, state)
View(dat5)
dat5<-dat5%>%
group_by(state, year, gov_name, term_in_office)
View(dat5)
dat5<-dat5%>%
group_by(state, year)
View(dat5)
dat5<-dat5%>%
arrange(state, year)
View(dat5)
names(dat1)
dat5<-dat5[,c(3:5,1,2,6:ncol(dat5))]
which(names(dat1)%in%names(dat5))
which(!(names(dat1)%in%names(dat5)))
names(dat1)
which(!(names(dat5)%in%names(dat1)))
names(test1)
dat2<-test1%>%
group_by(gov_name, term_in_office)%>%
summarise(unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
electoral_competitiveness=mean(electoral_competitiveness, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
gub_dem_vote_prop=mean(gub_dem_vote_prop, na.rm=T),
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T),
pres_party=mean(pres_party, na.rm=T)
)
dat3<-merge(dat1[,1:5], dat2, by=c('gov_name', 'term_in_office'), all.y = T)
dat4<-dat3[, c(3:5,1,2, 6:ncol(dat3))]
dat5<-merge(dat1[,1:12], dat4[,4:ncol(dat4)], by=c('gov_name', 'term_in_office') )
dat5<-dat5%>%
arrange(state, year)
dat5<-dat5[,c(3:5,1,2,6:ncol(dat5))]
table(dat5$pres_party)
table(test1$pres_party)
table(dat1$pres_party)
dat6<-merge(dat5, dat1[,c('gov_name', 'term_in_office', 'pres_party')], by=c('gov_name', 'term_in_office'))
View(dat6)
View(dat1)
dat2<-test1%>%
group_by(gov_name, term_in_office)%>%
summarise(unemployment=mean(unemployment, na.rm=T),
state_cpi=mean(state_cpi, na.rm=T),
gross_state_product=mean(gross_state_product, na.rm=T),
change_gsp=mean(change_gsp, na.rm=T),
electoral_competitiveness=mean(electoral_competitiveness, na.rm=T),
citizen_ideology=mean(citizen_ideology, na.rm=T),
state_ideology=mean(state_ideology, na.rm=T),
stimson_mood=mean(stimson_mood, na.rm=T),
votes_for_runnerup=mean(votes_for_runnerup, na.rm=T), # find avg with NA omit; takes one number, but compensates if the number of votes was not on the same line as top_n -1
votes_for_winner=mean(votes_for_winner, na.rm=T),
total_gub_votes=mean(total_gub_votes, na.rm=T),
winner_vote_proportion=mean(winner_vote_proportion, na.rm=T),
runnerup_vote_proportion=mean(runnerup_vote_proportion, na.rm=T),
diff_vote_proportion=mean(diff_vote_proportion, na.rm=T),
mean_gub_approve=mean(mean_gub_approve, na.rm=T),
mean_gub_disapprove=mean(mean_gub_disapprove, na.rm=T),
Republican_Popular_Vote=mean(Republican_Popular_Vote, na.rm=T),
Democrat_Popular_Vote=mean(Democrat_Popular_Vote, na.rm=T),
Third_Party_Popular_Vote=mean(Third_Party_Popular_Vote, na.rm=T),
total_popular_votes=mean(total_popular_votes, na.rm=T),
Republican_Popular_Vote_Proportion=mean(Republican_Popular_Vote_Proportion, na.rm=T),
Democrat_Popular_Vote_Proportion=mean(Democrat_Popular_Vote_Proportion, na.rm=T),
Third_Party_Popular_Vote_Proportion=mean(Third_Party_Popular_Vote_Proportion, na.rm=T),
mean_pres_approve=mean(mean_pres_approve, na.rm=T),
mean_pres_disapprove=mean(mean_pres_disapprove, na.rm=T)
)
dat3<-merge(dat1[,1:5], dat2, by=c('gov_name', 'term_in_office'), all.y = T)
dat4<-dat3[, c(3:5,1,2, 6:ncol(dat3))]
dat5<-merge(dat1[,1:12], dat4[,4:ncol(dat4)], by=c('gov_name', 'term_in_office') )
dat5<-dat5%>%
arrange(state, year)
dat5<-dat5[,c(3:5,1,2,6:ncol(dat5))]
dat6<-merge(dat5, dat1[,c('gov_name', 'term_in_office', 'pres_party', 'gub_dem_vote')], by=c('gov_name', 'term_in_office'))
dat6<-merge(dat5, dat1[,c('gov_name', 'term_in_office', 'pres_party', 'gub_dem_vote_prop')], by=c('gov_name', 'term_in_office'))
View(dat6)
dat6<-dat6%>%
arrange(state, year)
dat6<-dat6[,c(3:5,1,2,6:ncol(dat5))]
names(dat)
names(dat6)
which(!(names(dat1)%in%names(dat6)))
names(dat1)
dat6<-merge(dat5, dat1[,c('gov_name', 'term_in_office', 'pres_party', 'gub_dem_vote_prop')], by=c('gov_name', 'term_in_office'))
which(!(names(dat1)%in%names(dat6)))
dat6<-dat6%>%
arrange(state, year)
names(dat1)
names(dat6)[19:20]
dat6<-dat6[,c(3:5,1,2,6:20,ncol(dat6), 21:ncol(dat6)-1)]
View(dat1)
length(is.na(dat1$pres_party))
length(which(is.na(dat1$pres_party)))
View(dat1)
#fill pres_party
dem<-c(1950:1952, 1961:1968, 1977:1980, 1993:2000, 2009:2016) #years with D president
dat6$pres_party<-ifelse(dat6$year%in% dem, 1,0)
length(which(is.na(dat6$pres_party)))
year df<-dat6[,c('year', 'pres_party')]
yeardf<-dat6[,c('year', 'pres_party')]
View(yeardf)
unique(yeardf)
sort(unique(yeardf))
unique(yeardf)
getwd()
write.csv(dat6, 'GovDat.csv')
View(dat6)
View(dat6)
names(dat6)
qual <- read.dta13("C:/Users/zoeja/OneDrive/Documents/Summer 2018/GovernorData/StateGovernors1950-2008/CandidateQuality/qjps_primaries_quality_statewide_replication.dta")
fev<-read.csv('C:/Users/zoeja/Dropbox/OPM/FEVS/FEVS2006_PRDF_CSV/fhcs2006_publicrelease_v7_final.csv')
library(dplyr)
glimpse(fev)
length(which(fev$DSUPER=='E'))
View(fev)
#manager questions:
# 35,39,40,51
qscale<-sum(fev$Q35+fev$Q39)
#manager questions:
# 35,39,40,51
qscale<-fev$Q35+fev$Q39
head(qscale)
#manager questions:
# 35,39,40,51
class(fev$Q35)
glimpse(fev)
fev$Q1<-as.integer(fev$Q1)
head(fev$Q1)
fev$Q35<-as.integer(fev$Q35)
head(fev$Q35)
fev<-read.csv('C:/Users/zoeja/Dropbox/OPM/FEVS/FEVS2006_PRDF_CSV/fhcs2006_publicrelease_v7_final.csv')
fev$Q35.1<-as.integer(as.character((fev$Q35)))
head(fev$Q35.1)
fev$Q39.1<-as.integer(as.character((fev$Q39)))
table(fev$Q35.1)
table(fev$Q39.1)
qscale<-fev$Q35.1+fev$Q39.1
head(qscale)
fev$Q40.1<-as.integer(as.character((fev$Q40)))
fev$Q51.1<-as.integer(as.character((fev$Q51)))
qscale<-fev$Q35.1+fev$Q39.1+fev$Q40.1+fev$Q51.1
fev$qscale<-fev$Q35.1+fev$Q39.1+fev$Q40.1+fev$Q51.1
counts<-table(fev$qscale,fev$DFEDTEN) #federal tenure
head(fev$qscale)
range(fev$qscale)
max(fev$qscale)
table(fev$qscale)
fev[fev=='X']<-NA
fev<-read.csv('C:/Users/zoeja/Dropbox/OPM/FEVS/FEVS2006_PRDF_CSV/fhcs2006_publicrelease_v7_final.csv')
fev[fev=='X']<-NA
fev$Q35.1<-as.integer(as.character((fev$Q35)))
fev$Q39.1<-as.integer(as.character((fev$Q39)))
fev$Q40.1<-as.integer(as.character((fev$Q40)))
fev$Q51.1<-as.integer(as.character((fev$Q51)))
length(which(is.na(fev)))
fev$qscale<-sum(fev$Q35.1,fev$Q39.1,fev$Q40.1,fev$Q51.1, na.rm = T)
head(qscale)
table(fev$qscale)
qscale<-sum(fev$Q35.1,fev$Q39.1,fev$Q40.1,fev$Q51.1, na.rm = T)
fevman<-fev[,c('Q35.1','Q39.1', 'Q40.1', 'Q51.1')]
View(fevman)
names(fev)
fevman$scale<-colSums(fevman)
fevman$scale<-colSums(fevman, na.rm=T)
View(fevman)
fevman$scale<-rowSums(fevman, na.rm=T)
View(fevman)
range(fevman$scale)
which(fevman$scale==0)
fev$DSUPER[1113]
summary(fevman$scale)
fevman$sup<-fev$DSUPER
fevman$fedten<-fev$DFEDTEN
View(fevman)
table(fevman$fedten)
table(fev$DAGYTEN)
fevman$agyten<-fev$DAGYTEN
counts<-table(fevman$scale,fevman$agyten) #federal tenure
table(fevman$agyten)
barplot(counts, main='Manager Evaluation by Agency Tenure')
View(fevman)
summary(fevman$scale)
fevman$rescale<-ifelse(fevman$scale<6,1,0 )
fevman$rescale<-ifelse(fevman$scale>=6& fevman$scale<11,2,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale<5,1,0 )
fevman$rescale<-ifelse(fevman$scale<5,1,0 )
fevman$rescale<-ifelse(fevman$scale>=5& fevman$scale<8,2,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale>=9& fevman$scale<12,3,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale>=13& fevman$scale<16,4,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale>=17& fevman$scale<20,5,fevman$rescale )
summary(fevman$rescale)
fevman$rescale<-ifelse(fevman$scale>0&fevman$scale<5,1,0 )
fevman$rescale<-ifelse(fevman$scale>=5& fevman$scale<8,2,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale>=9& fevman$scale<12,3,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale>=13& fevman$scale<16,4,fevman$rescale )
fevman$rescale<-ifelse(fevman$scale>=17& fevman$scale<20,5,fevman$rescale )
summary(fevman$rescale)
counts<-table(fevman$rescale,fevman$agyten) #federal tenure
barplot(counts, main='Manager Evaluation by Agency Tenure')
table(fevman$agyten)
counts<-table(fevman$rescale,fevman$agyten[which(!fevman$agyten=='')]) #federal tenure
#subset fevman to remove unidentified agyten
fevmanagy<-fevman[which(fevman$agyten=='A'|
fevman$agyten=='B'|
fevman$agyten=='C'|
fevman$agyten=='D'|
fevman$agyten=='E'|
fevman$agyten=='F'),]
#counts<-table(fevman$rescale,fevman$agyten) #federal tenure
countsagy<-table(fevmanagy$rescale,fevmanagy$agyten) #federal tenure
barplot(counts, main='Manager Evaluation by Agency Tenure')
barplot(countsagy, main='Manager Evaluation by Agency Tenure')
table(fevmanagy$agyten)
table(fevmanagy$rescale)
#subset fevman to remove unidentified agyten
fevmanagy<-fevman[which((fevman$agyten=='A'|
fevman$agyten=='B'|
fevman$agyten=='C'|
fevman$agyten=='D'|
fevman$agyten=='E'|
fevman$agyten=='F')& fevman$rescale>0),]
#counts<-table(fevman$rescale,fevman$agyten) #federal tenure
countsagy<-table(fevmanagy$rescale,fevmanagy$agyten) #federal tenure
table(fevmanagy$agyten)
table(fevmanagy$rescale)
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents')
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
legend=rownames(counts))
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
)
legend=rownames(counts)
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'))
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend=rownames(counts), beside=T)
legend('topleft',rownames(counts))
legend('topleft',rownames(counts), fill=1:6)
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
dev.off()
dev.off()
dev.off()
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend('topleft',rownames(counts)))
dev.off()
dev.off()
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend('topleft',rownames(counts)))
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend=rownames(counts))
dev.off()
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
dev.off()
dev.off()
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend('topright', legend=rownames(counts)))
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend=rownames(counts))
barplot(countsagy, main='Manager Evaluation by Agency Tenure',
xlab='Agency Tenure',
ylab='Number of Respondents',
names.arg = c('Unknown', '<1 yr', '1-3 yr', '4-5 yr', '6-10 yr', '11-20 yr', '>20 yr'),
legend=rownames(counts), cex=.75)
